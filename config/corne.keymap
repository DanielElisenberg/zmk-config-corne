/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define U_TAP_MS 10
#define U_WAIT_MS 10

/ {
    behaviors {
        no_aa: no_aa {
            compatible = "zmk,behavior-macro";
            label = "swe one";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N9>
                , <&macro_release &kp LALT>;
        };
        no_aa_shift: swe_one_shift {
            compatible = "zmk,behavior-macro";
            label = "swe one shift";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N7>
                , <&macro_release &kp LALT>;
        };
        no_ae: no_ae {
            compatible = "zmk,behavior-macro";
            label = "swe two";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N0>
                , <&macro_release &kp LALT>;
        };
        no_ae_shift: no_ae_shift {
            compatible = "zmk,behavior-macro";
            label = "swe two shift";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N8>
                , <&macro_release &kp LALT>;
            };
        no_oe: no_oe {
            compatible = "zmk,behavior-macro";
            label = "swe three";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N8>
                , <&macro_release &kp LALT>;
        };
        no_oe_shift: no_oe_shift {
            compatible = "zmk,behavior-macro";
            label = "swe three shift";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N6>
                , <&macro_release &kp LALT>;
        };
        no_aa_morph: no_aa_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "no aa morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&no_aa>, <&no_aa_shift>;
        };
        no_ae_morph: no_ae_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "no ae morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&no_ae>, <&no_ae>;
        };
        no_oe_morph: no_oe_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "no oe morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&no_oe>, <&no_oe_shift>;
        };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

        keymap {
                compatible = "zmk,keymap";
                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  Å   |
// | MEDIA |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Ø  |  Æ   |
// | SHFT  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |  '  |
//                     | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp Q       &kp W         &kp E        &kp R      &kp T       &kp Y     &kp U           &kp I        &kp O      &kp P        &no_aa_morph
   &mo 4     &kp A       &hm LCTRL S   &hm LGUI D   &hm LALT F &kp G       &kp H     &hm LCTRL J     &hm LGUI K   &hm LALT L &no_oe_morph &no_ae_morph
   &kp LSHFT &kp Z       &kp X         &kp C        &kp V      &kp B       &kp N     &kp M           &kp COMMA    &kp DOT    &kp MINUS    &kp FSLH
                                       &kp LGUI     &lt 2 TAB  &kp SPACE   &lt 3 RET &lt 1 BACKSPACE &kp DEL
                        >; 
                };

                numeric_layer {
// -----------------------------------------------------------------------------------------
// |  &  |  /  |  1  |  2  |  3   |  -  |   |     |     | UP  |     |     |     |
// | "|" |  *  |  4  |  5  |  6   |  +  |   |     | LFT | DWN | RGT |     |     |
// |  !  |  .  |  7  |  8  |  9   |  =  |   |     |     |     |     |     |     |
//                   |  0  | TAB  | SPC |   |     |     |     |
                        bindings = <
   &kp AMPS &kp FSLH   &kp N1    &kp N2       &kp N3       &kp MINUS      &trans   &trans            &kp UP         &trans         &trans &trans
   &kp PIPE &kp STAR   &kp N4    &kp N5       &kp N6       &kp PLUS       &trans   &hm LCTRL LEFT    &hm LGUI DOWN  &hm LALT RIGHT &trans &trans
   &kp EXCL &kp DOT    &kp N7    &kp N8       &kp N9       &kp EQUAL      &trans   &trans            &trans         &trans         &trans &trans
                                 &kp N0       &kp TAB      &kp SPACE      &trans   &trans            &trans
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |  [  |  (  |  )  |  ]  |  \  |     |
// |      |     |     |     |     |     |   |  #  |  {  |  }  |  ^  |  @  |     |
// |      |     |     |     |     |     |   |  "  |  <  |  >  |  $  |  ~  |     |
//                    |     |     |     |   | RET | BSP |     |
                        bindings = <
   &trans &trans &trans &trans &trans &trans   &kp LBKT  &kp LPAR  &kp RPAR &kp RBKT  &kp BSLH  &trans
   &trans &trans &trans &trans &trans &trans   &kp HASH  &kp LBRC  &kp RBRC &kp CARET &kp AT    &trans
   &trans &trans &trans &trans &trans &trans   &kp DQT   &kp LT    &kp GT   &kp DLLR  &kp TILDE &trans
                        &trans &trans &trans   &kp RET   &kp BSPC  &kp DEL
                        >;
                };

                function_layer {
// -----------------------------------------------------------------------------------------
// |      |     | F1  | F2  | F3  | F10 |   |     |     |     |     |     |      |
// |      |     | F4  | F5  | F6  | F11 |   |     |     |     |     |     |      |
// |      |     | F7  | F8  | F9  | F12 |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans    &trans   &kp F1 &kp F2 &kp F3 &kp F10   &trans &trans    &trans    &trans   &trans &trans
   &trans    &trans   &kp F4 &kp F5 &kp F6 &kp F11   &trans &kp LCTRL &kp LGUI  &kp LALT &trans &trans
   &kp LSHFT &trans   &kp F7 &kp F8 &kp F9 &kp F12   &trans &trans    &trans    &trans   &trans &trans
                             &trans &trans &trans    &trans &trans    &trans
                        >;
                };

                media_layer {
// -----------------------------------------------------------------------------------------
// | BTCR | MUTE | VOL- | VOL+ |       |     |   |     |     |     | UP  |     |     |
// |      | BT1  | BT2  | BT3  | BT4   | BT5 |   |     |     | LFT | DWN | RGT |     |
// |      |      | PLAY | STOP | PAUSE |     |   |     |     |     |     |     |     |
//                      |      |       |     |   |     |     |     |
                        bindings = <
   &bt BT_CLR &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP &trans       &trans       &trans &trans   &kp UP   &trans    &trans &trans
   &trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &kp LEFT &kp DOWN &kp RIGHT &trans &trans
   &trans     &trans       &kp C_PLAY   &kp C_STOP   &kp C_PAUSE  &trans       &trans &trans   &trans   &trans    &trans &trans
                                        &trans       &trans       &trans       &trans &trans &trans
                        >;
                };


        };
};


