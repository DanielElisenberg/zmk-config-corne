/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#include <behaviors/mouse_key_press.dtsi>
#include <behaviors/mouse_move.dtsi>
#include <behaviors/mouse_scroll.dtsi>

#define U_TAP_MS 10
#define U_WAIT_MS 10

#define __ &trans

#define DEFAULT 0
#define LEFT_HRM 1
#define RIGHT_HRM 2
#define SYMBOL 3
#define NAVIGATION 4
#define NUMERIC 5
#define FUNCTION 6
#define MOUSE 7
#define SYSTEM 8

#define t1 &lt SYMBOL ESC
#define t2 &mo LEFT_HRM
#define t3 &lt NAVIGATION SPACE
#define t4 &lt NUMERIC RET
#define t5 &mo RIGHT_HRM
#define t6 &lt FUNCTION TAB

&mmv {
   time-to-max-speed-ms = <450>;
   acceleration-exponent=<2>;
};

/ {
    behaviors {
        dot_mod: dot_mod {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&kp DOT>, <&kp COLON>;
        };
        comma_mod: comma_mod {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&kp COMMA>, <&kp SEMI>;
        };
        cqm: comma_alt_mod {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
            bindings = <&comma_mod>, <&kp QMARK>;
        };
        dem: dot_exclamation_mod {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
            bindings = <&dot_mod>, <&kp EXCLAMATION>;
        };
        sqt_macro: sqt_macro { 
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_tap &kp SQT>
                , <&macro_tap &kp SPACE>;
        };
        dqt_macro: dqt_macro { 
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_tap &kp DQT>
                , <&macro_tap &kp SPACE>;
        };
        qtm: qt_mod {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&sqt_macro>, <&dqt_macro>;
        };
        cam: caret_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_tap &kp CARET>
                , <&macro_tap &kp SPACE>;
        };
        tim: tilde_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_tap &kp TILDE>
                , <&macro_tap &kp SPACE>;
        };
        no_aa: no_aa {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_press   &kp RALT>
                , <&macro_tap     &kp A>
                , <&macro_release &kp RALT>;
        };
        no_ae: no_ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_press   &kp RALT>
                , <&macro_tap     &kp SQT>
                , <&macro_release &kp RALT>;
        };
        no_oe: no_oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_press   &kp RALT>
                , <&macro_tap     &kp O>
                , <&macro_release &kp RALT>;
            };
        A_AA: A_AA {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            bindings = <&kp A>, <&no_aa>;
        };
        E_AE: E_AE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            bindings = <&kp E>, <&no_ae>;
        };
        O_OE: O_OE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            bindings = <&kp O>, <&no_oe>;
        }; 
        lthp: layer_tap_hold_preferred {
          compatible = "zmk,behavior-hold-tap";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick-tap-ms = <0>;
          flavor = "hold-preferred";
          bindings = <&mo>, <&kp>;
        };
    };
    keymap {
        compatible = "zmk,keymap"; 
        default_layer {
            bindings = <
                __  &kp Q  &kp W  &E_AE  &kp R  &kp T  &kp Y  &kp U  &kp I &O_OE  &kp P     __ 
                __  &A_AA  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp K &kp L  &qtm      __
                __  &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &cqm  &dem   &kp MINUS __
                                  t1     t2     t3     t4     t5     t6
            >;
        };
        left_hmr_layer {
            bindings = <
                __  __          __         __        __        __  __  __  __  __  __  __
                __  &sk LSHIFT  &sk LCTRL  &sk LGUI  &sk LALT  __  __  __  __  __  __  __
                __  __          __         __        __        __  __  __  __  __  __  __
                                           __        __        __  __  __  __
            >;
        };
        right_hmr_layer {
            bindings = <
                __  __  __  __  __  __  __  __       __       __        __          __
                __  __  __  __  __  __  __  &sk LALT &sk LGUI &sk LCTRL &sk LSHIFT  __
                __  __  __  __  __  __  __  __  __  __  __  __
                            __  __  __  __  __  __
            >;
        };
        symbol_layer {
            bindings = <
                __ __          __         __        __        __  &caret_macro &kp LPAR &kp RPAR &kp GRAVE &kp BSLH     __ 
                __ &sk LSHIFT  &sk LCTRL  &sk LGUI  &sk LALT  __  &kp UNDER    &kp LBKT &kp RBKT &kp AT    &kp DLLR     __   
                __ __          __         __        __        __  &kp AMPS     &kp LT   &kp GT   &kp HASH  &tilde_macro __
                                          __        __        __  &kp LBRC     &kp RBRC &kp PIPE
            >;
        };
        navigation_layer {
            bindings = <
                __ __          __         __        __        __  &kp INSERT  &kp PG_DN     &kp UP   &kp PG_UP __      __ 
                __ &sk LSHIFT  &sk LCTRL  &sk LGUI  &sk LALT  __  &kp HOME    &kp LEFT      &kp DOWN &kp RIGHT &kp END __
                __ __          __         __        __        __  __          &kp BACKSPACE __       &kp DEL   __     __ 
                                          __        __        __  &mo MOUSE   __     __ 
            >;
        };
        numeric_layer {
            bindings = <
                __ &kp FSLH     &kp N1  &kp N2  &kp N3      &kp MINUS __ __        __         __        __         __
                __ &kp STAR     &kp N4  &kp N5  &kp N6      &kp PLUS  __ &sk LALT  &sk LGUI  &sk LCTRL  &sk LSHIFT __
                __ &kp PERCENT  &kp N7  &kp N8  &kp N9      &kp EQUAL __ __        __         __        __         __
                                        &kp N0  &comma_mod  &dot_mod  __ __        __
            >;
        }; 
        function_layer {
            bindings = <
                __ &kp CAPSLOCK   &kp F1 &kp F2      &kp F3 &kp F10 __ __       __       __        __          __
                __ &kp KP_NUMLOCK &kp F4 &kp F5      &kp F6 &kp F11 __ &sk LALT &sk LGUI &sk LCTRL &sk LSHIFT  __
                __ &kp PSCRN      &kp F7 &kp F8      &kp F9 &kp F12 __ __       __       __         __         __
                                         &mo SYSTEM  __     __      __ __       __
            >;
        };
        system_layer {
            bindings = <
                __ &kp C_VOL_UP &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &to DEFAULT         __ __ __ __ __ __
                __ &kp C_VOL_DN &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR   &to DEFAULT_GAMING  __ __ __ __ __ __
                __ &kp C_MUTE   &kp C_PREV   &kp C_NEXT   __           __                  __ __ __ __ __ __
                                             &kp C_PLAY   &kp C_STOP   &kp C_PAUSE         __ __ __
            >;
        };
        mouse_layer {
            bindings = <
                __ __          __         __        __        __  __         &msc SCRL_DOWN &mmv MOVE_UP   &msc SCRL_UP     __  __
                __ &sk LSHIFT  &sk LCTRL  &sk LGUI  &sk LALT  __  __         &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT  __  __
                __ __          __         __        __        __  __         &mkp LCLK      &mkp RCLK      &mkp MCLK        __  __
                                          __        __        __  __         __             __             __
            >;
        };
    };
};
