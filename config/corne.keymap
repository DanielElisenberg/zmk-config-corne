/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define U_TAP_MS 10
#define U_WAIT_MS 10

#define ______ &trans

/ {
    behaviors {
        no_aa: no_aa {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp A>
                , <&macro_release &kp LALT>;
        };
        no_ae: no_ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp SQT>
                , <&macro_release &kp LALT>;
        };
        no_oe: no_oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp O>
                , <&macro_release &kp LALT>;
        };
        my_dot: my_dot {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&kp DOT>, <&kp COLON>;
        };
        my_comma: my_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&kp COMMA>, <&kp SEMI>;
        };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
                &kp ESC   &kp Q &kp W       &kp E      &kp R      &kp T       &kp Y     &kp U           &kp I      &kp O      &kp P        &no_aa
                &mo 4     &kp A &hm LCTRL S &hm LGUI D &hm LALT F &kp G       &kp H     &hm LCTRL J     &hm LGUI K &hm LALT L &no_oe       &no_ae
                &kp LGUI  &kp Z &kp X       &kp C      &kp V      &kp B       &kp N     &kp M           &my_comma  &my_dot    &kp MINUS    &kp SQT
                                            &kp LSHIFT &lt 2 TAB  &kp SPACE   &lt 3 RET &lt 1 BACKSPACE &kp DEL
            >; 
        };
        numeric_layer {
            bindings = <
                &kp AMPS &kp FSLH  &kp N1 &kp N2 &kp N3  &kp MINUS  ______   ______         &kp UP         ______         ______ ______
                &kp PIPE &kp STAR  &kp N4 &kp N5 &kp N6  &kp PLUS   ______   &hm LCTRL LEFT &hm LGUI DOWN  &hm LALT RIGHT ______ ______
                &kp EXCL &kp QMARK &kp N7 &kp N8 &kp N9  &kp EQUAL  ______   ______         &my_comma      &my_dot        ______ ______
                                          &kp N0 &kp TAB &kp SPACE  ______   ______         ______
            >;
        };
        symbol_layer {
            bindings = <
                ______ ______ ______ ______ ______ ______   &kp LBKT  &kp LPAR  &kp RPAR &kp RBKT  &kp BSLH  &GRAVE
                ______ ______ ______ ______ ______ ______   &kp HASH  &kp LBRC  &kp RBRC &kp CARET &kp AT    ______
                ______ ______ ______ ______ ______ ______   &kp DQT   &kp LT    &kp GT   &kp DLLR  &kp TILDE ______
                                     ______ ______ ______   &kp RET   &kp BSPC  &kp DEL
            >;
        };
        function_layer {
            bindings = <
                ______    ______ &kp F1 &kp F2 &kp F3 &kp F10   ______ ______    ______   ______   ______ ______
                ______    ______ &kp F4 &kp F5 &kp F6 &kp F11   ______ &kp LCTRL &kp LGUI &kp LALT ______ ______
                &kp LSHFT ______ &kp F7 &kp F8 &kp F9 &kp F12   ______ ______    ______   ______   ______ ______
                                        ______ ______ ______    ______ ______    ______
            >;
        };
        media_layer {
            bindings = <
                ______ &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP ______       ______       ______ ______   &kp UP   ______    ______ &bt BT_CLR
                ______ &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 ______ &kp LEFT &kp DOWN &kp RIGHT ______ ______
                ______ ______       &kp C_PLAY   &kp C_STOP   &kp C_PAUSE  ______       ______ ______   ______   ______    ______ ______
                                                 ______       ______       ______       ______ ______   ______
            >;
        };
    };
};
